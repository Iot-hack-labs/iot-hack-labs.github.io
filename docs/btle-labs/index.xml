<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>BTLE CTF on IoT Hack Labs</title><link>https://iot-hack-labs.github.io/btle-labs/</link><description>Recent content in BTLE CTF on IoT Hack Labs</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 18 Oct 2021 20:39:54 -0600</lastBuildDate><atom:link href="https://iot-hack-labs.github.io/btle-labs/index.xml" rel="self" type="application/rss+xml"/><item><title>Getting Started</title><link>https://iot-hack-labs.github.io/btle-labs/01-getting-started/</link><pubDate>Mon, 18 Oct 2021 20:39:54 -0600</pubDate><guid>https://iot-hack-labs.github.io/btle-labs/01-getting-started/</guid><description>Devices Because it may be difficult to scan for all Bluetooth devices in such a crowded area, the BLE_CTF_INFINITY MAC addresses for each challenge are provided below.
Challenge 0: 94:B9:7E:DA:08:56 Challenge 1: 08:3A:F2:7D:65:8A Challenge 2: 94:B9:7E:FA:27:72 Challenge 3: 94:B9:7E:F9:21:B6 Tools We can use a few different tools to solve some BLE CTF Infinity challenges.
hciconfig bleah gatttool Hciconfig You can view BLE interfaces on you system by using the hciconfig command.</description></item><item><title>Flag0</title><link>https://iot-hack-labs.github.io/btle-labs/02-flag0/</link><pubDate>Mon, 18 Oct 2021 20:39:54 -0600</pubDate><guid>https://iot-hack-labs.github.io/btle-labs/02-flag0/</guid><description>Use bettercap to enumerate the characteristics on the device.
$ sudo bettercap &amp;gt; ble.recon on &amp;gt; ble.enum 94:B9:7E:DA:08:56 ‚ö†Ô∏è Try this a few times if it doesn&amp;rsquo;t work and/or removing and plugging in the bluetooth dongle.
For the flag 0, we see that the &amp;lsquo;Device Name&amp;rsquo; kinda looks like a flag.</description></item><item><title>Flag1</title><link>https://iot-hack-labs.github.io/btle-labs/03-flag1/</link><pubDate>Mon, 18 Oct 2021 20:39:54 -0600</pubDate><guid>https://iot-hack-labs.github.io/btle-labs/03-flag1/</guid><description>Use Bettercap to Enumerate All Characteristics At this point, if we try to use bleah to enumerate the characteristics, we see that bleah shows us some interesting values.
$ sudo bleah -b 08:3A:F2:7D:65:8A -e When enumerating, the value at handle 0x002a returns goodbye üëã. This disconnects the device. We have to use another tool to target reading the other values.
Use Gatttool to Read Characteristics Read the value at 0x002c using gatttool.</description></item><item><title>Flag2</title><link>https://iot-hack-labs.github.io/btle-labs/04-flag2/</link><pubDate>Mon, 18 Oct 2021 20:39:54 -0600</pubDate><guid>https://iot-hack-labs.github.io/btle-labs/04-flag2/</guid><description>View Gatt Table After switching to challenge 2, use bettercap to enumerate its characteristics again.
$ sudo bettercap &amp;gt; ble.recon on &amp;gt; ble.enum 94:B9:7E:FA:27:72 We see that there is some authentication required, and that we should connect with pin 0000. We can do this with gatttool.
Use Gatttool with Authentication $ gatttool --sec-level=high -b 94:B9:7E:FA:27:72 --char-read -a 0x002c This will prompt you for the pin. Enter 0000 and click OK.</description></item><item><title>Flag3</title><link>https://iot-hack-labs.github.io/btle-labs/05-flag3/</link><pubDate>Mon, 18 Oct 2021 20:39:54 -0600</pubDate><guid>https://iot-hack-labs.github.io/btle-labs/05-flag3/</guid><description>View Gatt Table Use bettercap to enumerate its characteristics again.
$ sudo bettercap &amp;gt; ble.recon on &amp;gt; ble.enum 94:B9:7E:F9:21:B6 We can see that it is looking for a device with the MAC address 11:22:33:44:55:66 to connect to it.
View the Interface MAC Address Use hciconfig to view the MAC address of the interface.
Spooftooph We can spoof our mac address with the tool spooftooph. (Make sure to use sudo)
$ sudo spooftooph -i hci0 -a 11:22:33:44:55:66 Once we have done this, we need to reset the interface for the changes to take.</description></item><item><title>Finishing up</title><link>https://iot-hack-labs.github.io/btle-labs/09-outro/</link><pubDate>Mon, 18 Oct 2021 20:39:54 -0600</pubDate><guid>https://iot-hack-labs.github.io/btle-labs/09-outro/</guid><description>References https://github.com/hackgnar/ble_ctf_infinity Chapter 11 of Practical IoT Hackingfrom No Starch Press.</description></item><item><title>Ultraloq-UL3</title><link>https://iot-hack-labs.github.io/btle-labs/99-ultraloq-ul3/</link><pubDate>Mon, 18 Oct 2021 20:39:54 -0600</pubDate><guid>https://iot-hack-labs.github.io/btle-labs/99-ultraloq-ul3/</guid><description>Ultraloq UL3 Find the firmware version that is being broadcasted by the Ultraloq UL3 Bluetooth enabled lock.
This can be done using some different tools.
Bettercap Because there are so many BLE devices in crowded areas, we will provide you the MAC address of the Ultraloq UL3:
78:DB:2F:DA:BA:3B
You can also use a tool like bettercap to find this.
$ sudo bettercap
&amp;gt; ble.recon on
You will have to turn off recon shortly after starting it because there are so many devices.</description></item></channel></rss>