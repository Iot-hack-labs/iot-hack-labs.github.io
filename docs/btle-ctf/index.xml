<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>BTLE CTF on IoT Hack Labs</title><link>https://iot-hack-labs.github.io/btle-ctf/</link><description>Recent content in BTLE CTF on IoT Hack Labs</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 18 Oct 2021 20:39:54 -0600</lastBuildDate><atom:link href="https://iot-hack-labs.github.io/btle-ctf/index.xml" rel="self" type="application/rss+xml"/><item><title>Intro</title><link>https://iot-hack-labs.github.io/btle-ctf/01-intro/</link><pubDate>Mon, 18 Oct 2021 20:39:54 -0600</pubDate><guid>https://iot-hack-labs.github.io/btle-ctf/01-intro/</guid><description>Hciconfig You can view BLE interfaces on you system by using the hciconfig command. You should see at least one interface.
Bettercap We need to discover the address of our target BLE device. There are many tools that can accomplish this. We will use bettercapin the command line.
Start bettercap (lab machine passwords: password)
$ sudo bettercap Run recon to list discovered BLE devices. Note, there will probably be many discovered devices in crowded areas.</description></item><item><title>Outro</title><link>https://iot-hack-labs.github.io/btle-ctf/99-outro/</link><pubDate>Mon, 18 Oct 2021 20:39:54 -0600</pubDate><guid>https://iot-hack-labs.github.io/btle-ctf/99-outro/</guid><description>Finishing up Thats it for this lab. You are welcome to continue to try the other challenges. If you are done, reset the CTF by writing 0xC1EA12 to handle 0x0032.
$ gatttool -b AA:BB:CC:DD:EE:FF --char-write-req -a 0x0032 -n C1EA12 References https://github.com/hackgnar/ble_ctf_infinity Chapter 11 of Practical IoT Hackingfrom No Starch Press.</description></item></channel></rss>